.skeleton_loader {
    display: flex;
    align-items: center;
    background-color: #fff;
    width: 100%;
    height: 100%;
    border-radius: 16px;
    overflow: hidden;
}

.skeleton_avatar {
    width: 100%;
    height: 100%;
    background-color: #e0e0e0;
    animation: pulse 1.5s infinite ease-in-out;
}


@keyframes pulse {
    0% {
        background-color: #e0e0e0;
    }

    50% {
        background-color: #f0f0f0;
    }

    100% {
        background-color: #e0e0e0;
    }
}

.loader {
    border-radius: 50%;
    display: inline-block;
    border-right: 3px solid transparent;
    box-sizing: border-box;
    animation: rotation 1s linear infinite;
}

@keyframes rotation {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}


// //////spinner2///////////////
/**
 * Private-use animation for rotating our spinner.
 */
 @keyframes _spinner {

    to {
      transform: rotate(-1440deg);
    }
  
  }
  
  // Based on work by @anatudor and @hugogiraudel
  //
  // Automatically distribute a series of small dots around the circumference of
  // a specified circle.
  @mixin _build-spinner($spinner-dot-count: 3,
                        $spinner-size: 15px,
                        $spinner-dot-size: 5px) {
    position: relative;
    width: $spinner-size;
    height: $spinner-size;
  
    /**
     * Dots are just little white circles. They start life in the very centre of
     * their host spinner[1].
     */
    > span {
      position: absolute; /* [1] */
      top: 50%; /* [1] */
      left: 50%; /* [1] */
      margin-top: -$spinner-dot-size / 2; /* [1] */
      margin-left: -$spinner-dot-size / 2; /* [1] */
      width: $spinner-dot-size;
      height: $spinner-dot-size;
      background-color: black;
      border-radius: 100%;
  
      // Begin distributing our dots
      $increment: (360 / $spinner-dot-count);
      $rotation: 0;
  
      @for $i from 1 through $spinner-dot-count {
  
        /**
         * Distribute dots by moving them to the edge of their parent circle and
         * rotating them by the correct proportion.
         */
        &:nth-of-type(#{$i}) {
          transform:
            rotate($rotation * 1deg)
            translate($spinner-size / 2);
        }
  
        // Increment the amount of rotation for the next dot.
        $rotation: $rotation + $increment;
  
      }
  
    }
  
  }
  
  /**
   * 1. Once the animation has run in one direction, go back again.
   */
  .c_spinner {
    @include _build-spinner();
    animation: 2s _spinner ease-in-out infinite alternate; /* [1] */
    margin: 0 !important;
  }
  
    /**
     * Visually hide the ‘Loading…’ text.
     */
    .c_spinner__text {
      position: absolute;
      width: 1px;
      height: 1px;
      overflow: hidden;
      clip: rect(1px, 1px, 1px, 1px);
    }